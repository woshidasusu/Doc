import{_ as e,o as i,c as l,d as a}from"./app-PjuKeMiB.js";const t={},d=a(`<h1 id="题目-怎么让一个-div-水平垂直居中" tabindex="-1"><a class="header-anchor" href="#题目-怎么让一个-div-水平垂直居中" aria-hidden="true">#</a> 题目：怎么让一个 div 水平垂直居中</h1><p>https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/92</p><h1 id="笔记" tabindex="-1"><a class="header-anchor" href="#笔记" aria-hidden="true">#</a> 笔记</h1><p>div 默认是一个块级元素，宽度占据一整行。所以需要区分场景：</p><p>如果 div 没有设置宽高，而是想让其中的行内元素或文本水平垂直居中，那么应该通过：</p><ul><li>text-align 和 line-height</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;div style=&quot;text-align: center;height: 40px;line-height: 40px;&quot;&gt;
    &lt;span&gt;水平垂直居中&lt;/span&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果 div 有设置宽高，想让 div 水平垂直居中，可以用下面的方法：</p><h3 id="利用父容器" tabindex="-1"><a class="header-anchor" href="#利用父容器" aria-hidden="true">#</a> 利用父容器</h3><h4 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> flex</h4><ul><li>flex + just-content&amp;algin-items</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;div style=&quot;display: flex;just-content: center;align-items: center;&quot;&gt;
    &lt;div style=&quot;width: 30px; height: 30px; background-color: blue;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>flex + margin</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;div style=&quot;display: flex;&quot;&gt;
    &lt;div style=&quot;margin: auto;width: 30px; height: 30px; background-color: blue;&quot;&gt;
    &lt;/div&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="grid" tabindex="-1"><a class="header-anchor" href="#grid" aria-hidden="true">#</a> grid</h4><p>将上面两个示例中的 display: flex 替换成 display: grid，其余不变，也能实现水平垂直居中效果</p><h3 id="不依赖于父容器" tabindex="-1"><a class="header-anchor" href="#不依赖于父容器" aria-hidden="true">#</a> 不依赖于父容器</h3><h4 id="margin" tabindex="-1"><a class="header-anchor" href="#margin" aria-hidden="true">#</a> margin</h4><p>某些场景中，直接设置 margin: auto 就能得到效果</p><h4 id="绝对定位" tabindex="-1"><a class="header-anchor" href="#绝对定位" aria-hidden="true">#</a> 绝对定位</h4><ul><li>absolute + margin</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;div style=&quot;position: releative;&quot;&gt;
    &lt;div style=&quot;position: absolute;left: 50%;top: 50%;width: 30px;height: 30px;margin-left: -15px; margin-top: -15px;&quot;&gt;
        
    &lt;/div&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>left 和 top 相对于父元素偏移 50%，再扣掉自身宽高一半即可。这种只适合于宽高固定的场景，每次修改宽高也需要同步修改 margin</p><ul><li>absolute + transfrom</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;div style=&quot;position: releative;&quot;&gt;
    &lt;div style=&quot;position: absolute;left: 50%;top: 50%;width: 30px;height: 30px;transform: translate3d(-50%, -50%, 0);&quot;&gt;
        
    &lt;/div&gt;
&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>left 和 top 相对于父元素偏移 50%，transform 再相对于自身偏移 50%。这种方式就不要求 div 必须是固定宽高的了。</p><h3 id="考虑点" tabindex="-1"><a class="header-anchor" href="#考虑点" aria-hidden="true">#</a> 考虑点</h3><p>实现水平垂直居中有多种方式，要么将 div 变为 inline-block，然后将其包裹在一个块级元素中，利用 text-align 和 line-height 或 vertical-align 来实现居中。</p><p>要么，就是利用父容器，将 div 放置在 flex 或 grid 容器中；</p><p>再要么，就是利用绝对定位 position: absolute，然后设置好偏移量。</p><p>三种方式，各有优缺点，各有各自的适用场景，实际使用中，根据自身场景权衡好即可。</p><p>比如，inline-block 方式，会让当前 div 变成行内元素，需要注意对其他元素的排版是否会造成影响。</p><p>添加一个 flex 容器，需要注意，div 的其他兄弟元素，是否也会受到 flex 容器的排版规则影响；</p><p>使用绝对定位，会导致 div 脱离普通流，导致父元素高度坍塌，需要考虑这种副作用是否会影响其余元素布局。</p>`,34),n=[d];function s(r,u){return i(),l("div",null,n)}const h=e(t,[["render",s],["__file","div水平垂直居中.html.vue"]]);export{h as default};
