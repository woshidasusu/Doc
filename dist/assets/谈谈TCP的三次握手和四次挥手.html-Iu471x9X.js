import{_ as t,r as o,o as r,c as i,a as e,b as a,e as n,d as s}from"./app-2pyCoCP5.js";const c={},d={id:"题目-谈谈你对tcp三次握手和四次挥手的理解",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#题目-谈谈你对tcp三次握手和四次挥手的理解","aria-hidden":"true"},"#",-1),A={href:"https://github.com/Advanced-Frontend/Daily-Interview-Question/issues/15",target:"_blank",rel:"noopener noreferrer"},h=s('<h3 id="tcp" tabindex="-1"><a class="header-anchor" href="#tcp" aria-hidden="true">#</a> TCP</h3><p>TCP：transmission control protocol （传输控制协议）</p><p>TCP 协议位于五层网络协议（应用层、传输层、网络层、链路层、物理层）中的传输层，它提供了超时重发、拥塞检测、流量控制等特性，主要特点是可靠性强、但传输效率低；</p><p>常与 TCP 比较的是 UDP（user datagram protocol 用户数据包协议），UDP 与 TCP 特性恰好相反，它的传输效率高、但可靠性低；</p><h3 id="三次握手" tabindex="-1"><a class="header-anchor" href="#三次握手" aria-hidden="true">#</a> 三次握手</h3><p>TCP 传输数据前，双向需要先建立连接，这个过程需要三次握手：</p><ol><li>A 发送 SYN 给 B</li><li>B 返回 ACK 和 SYN 给 A</li><li>A 再返回 ACK 给 B</li></ol><p>连接建立。</p><p>那么，为什么需要三次握手？</p><p>因为三次是双向能够互相确定可相互通信的最小次数，双方建立连接，其实是需要相互确认对方信息，比如你的接收窗口多大，我想要发送多大的数据等等。</p><p>所以，第一次 A 到 B 的请求，当 B 接收到的时候，它就知道 A 的信息了，但这个时候 A 还不知道 B 的信息，所以才需要 B 返回 ACK 给 A；</p><p>A 接收到 B 的 ACK 时，此时 A 也就知道 B 的信息了，虽然这样一来，双方都知道对方的信息了，但是对于 B 来说，它并不知道 A 到底有没有接收到，也就是它不确定 A 是知道它的信息了。所以才需要第三次的 A 发给 B 的 ACK。</p><p>这样一来，A 能够确定 B 知道它的信息，且它也有 B 的信息，而 B 也能确定 A 知道它的信息，且它也有 A 的信息，双方交互的信息足够了，就可以开始进行通信了。</p><p><img src="https://upload-images.jianshu.io/upload_images/2095550-d49db915d308c518.png" alt=""></p><h3 id="四次挥手" tabindex="-1"><a class="header-anchor" href="#四次挥手" aria-hidden="true">#</a> 四次挥手</h3><p>断开连接的过程需要四次挥手：</p><ol><li>A 发送 FIN 给 B，表明 A 准备断开连接了</li><li>B 返回 ACK 给 A，表明 B 知道了，但它还没准备好（因为可能还有数据需要传输）</li><li>B 发送 FIN 给 A，表明 B 都处理好了，连接可以断了</li><li>A 返回 ACK 给 B，表明 A 知道了，B 你断吧</li></ol><p>A 最后发送完后等待 2MSL，没有接收到 B 的请求后，就直接断掉。连接结束。</p><p>那么，为什么需要有四次挥手呢？为什么比连接建立时多了一次？</p><p>这是因为，连接断开的场景是不确定的，也就是说，需要断开的时候，可能还有数据需要传输。所以，并不是你说断就能马上断的，需要双方都准备好才行，所以就多了一次请求。</p><p>一步步来说：</p><p>当 A 想要断开连接的时候，它就发送一个 FIN 给 B，告诉 B 准备断开连接了；</p><p>当 B 接收到 A 的 FIN 时，它需要回一个 ACK，告诉 A 它知道了，但稍等一下，它需要再处理下；这条 ACK 不能没有，因为 A 需要明确知道，B 到底是不是知道 A 想断开连接。</p><p>到这里就有两次请求了；</p><p>然后当 B 处理完毕，准备好了的时候，它就主动发 FIN 给 A，告诉 A 说 B 准备好了，随时可以关闭了。</p><p>A 接收到 B 的 FIN 后，需要回 ACK，告诉 B 它知道了，连接 B 关了吧。这样 B 才能明确知道 A 确实接收到 B 随时可以关闭的信息，此时就把连接关掉。</p><p>最后 A 等待一定时间后，把连接关掉。</p><p>所以，整个过程需要四次挥手。</p><p><img src="https://user-images.githubusercontent.com/34148615/53062591-3d846300-34fc-11e9-8d0f-4063d9ff3398.png" alt=""></p>',29);function B(_,C){const p=o("ExternalLinkIcon");return r(),i("div",null,[e("h1",d,[l,a(" 题目："),e("a",A,[a("谈谈你对TCP三次握手和四次挥手的理解"),n(p)])]),h])}const f=t(c,[["render",B],["__file","谈谈TCP的三次握手和四次挥手.html.vue"]]);export{f as default};
