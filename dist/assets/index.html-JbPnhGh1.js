import{_ as l,r as d,o as h,c as o,a as e,b as a,e as s,w as c,d as n}from"./app-pwInIdNR.js";const t={},u=n(`<h1 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> linux</h1><h2 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h2><h3 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> find</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># / 从根目录下开始搜索， -i：忽略大小写 -name：按名称搜索
find / -iname xxxx  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="whereis" tabindex="-1"><a class="header-anchor" href="#whereis" aria-hidden="true">#</a> whereis</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 快速查找某个文件
whereis nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="df-h" tabindex="-1"><a class="header-anchor" href="#df-h" aria-hidden="true">#</a> df -h</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 查看磁盘使用情况
df -h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="权限" tabindex="-1"><a class="header-anchor" href="#权限" aria-hidden="true">#</a> 权限</h2><h3 id="chown" tabindex="-1"><a class="header-anchor" href="#chown" aria-hidden="true">#</a> chown</h3><p>修改文件属主</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># -R：递归处理目录下所有目录文件
chown [-R] user:group file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chmod" tabindex="-1"><a class="header-anchor" href="#chmod" aria-hidden="true">#</a> chmod</h3><p>修改文件权限，文件权限分三级：属主、群组、其他（user|group|other）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ls -all
-rw-r--r-- 1 root root    2 Nov 23 13:20 3
drwxr-xr-x 2 root root 4096 Nov 23 17:41 test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个：d 表示文件夹，- 表示文件</p><p>其余三个一组，分别表示 user，group，other 对该文件的权限，r（读），w（写），x（可执行）</p><ul><li>修改文件权限</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 7 的二进制：111，所以 777 表示将该文件的设置成所有用户都有全部权限
chmod 777 file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="su-或-su" tabindex="-1"><a class="header-anchor" href="#su-或-su" aria-hidden="true">#</a> su 或 su -</h3><p><strong>su [user]</strong>： 切换到指定用户，默认切到 root 用户，切换过去时，保留当前工作空间</p><p><strong>su - [user]</strong>： 用途跟上面一致，区别在于，切换的时候，当前工作空间也切换到用户的工作空间</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>su www -c &quot;whoami;pwd&quot;
# 输出 www  /root

su - www -c &quot;whoami;pwd&quot;
# 输出 www /home/www
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：spring-boot 后端项目如果有配置抽离，那么运行后端项目时，一定不能使用 <code>su - user -c &quot;nohup ....&quot;</code>，这是因为，这条命令会让 nohup 执行时的当前工作空间切换到用户空间，导致 spring-boot 在当前目录下找不到 config 里的配置文件从而运行错误</p><h2 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件</h2><p>文件内容编辑、查看等命令</p><h3 id="vi-vim" tabindex="-1"><a class="header-anchor" href="#vi-vim" aria-hidden="true">#</a> vi,vim</h3><p>通过 vi 命令编辑文本内容，vi 常用命令：<a href="../vim%E9%80%9F%E6%9F%A5">vim 命令速查</a></p><h3 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h3><p>将文本内容全部输出，可结合 grep 命令进行过滤，文本内容不多时，或需要查找部分内容时常用</p><h3 id="tail" tabindex="-1"><a class="header-anchor" href="#tail" aria-hidden="true">#</a> tail</h3><p>常用来实时查看日志</p><ul><li>实时查看日志，日志文件有新内容立即输出到终端</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tail -f xxx.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看最后 n 行内容</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 查看最后 20 行内容
tail -n 20 xxx.log

# 查看第 20 行开始到结束的内容
tail -n -20 xxx.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>###less</p><p>常用来浏览文件，打开文件后，通过一些快捷键命令来进行交互</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>less [参数] 文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用参数：</p><p><strong>-N</strong>：显示行号</p><p><strong>-x &lt;数字&gt;</strong>：将 tab 键替换成指定空格显示</p><p>快捷键命令：</p><p><strong>/字符串</strong>：向下搜索字符串</p><p><strong>?字符串</strong>：向上搜索字符串</p><p><strong>n</strong>：重复前一个搜索（与 / 或 ? 合用）</p><p><strong>N</strong>：反向重复前一个搜索（与 / 或 ? 合用）</p><p><strong>方向键</strong>：上下左右</p><p><strong>空格|pgDown</strong>：向下翻一页</p><p><strong>pgUp</strong>：向上翻一页</p><p><strong>回车</strong>：向下滚动一行</p><p><strong>y</strong>：向上滚动一行</p><p><strong>F</strong>：效果类似 tail -f 监听文件输入，ctrl+C 停止</p><p><strong>q</strong>：离开</p><h2 id="服务器交互" tabindex="-1"><a class="header-anchor" href="#服务器交互" aria-hidden="true">#</a> 服务器交互</h2>`,55),v={href:"http://blog.dasu.fun/2019/11/23/shell%E8%84%9A%E6%9C%AC/shell%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",target:"_blank",rel:"noopener noreferrer"},p=n(`<h3 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh" aria-hidden="true">#</a> ssh</h3><p>连接服务器， -p 参数指定端口号</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh -p 22 root@ip
# 输密码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sz-rz" tabindex="-1"><a class="header-anchor" href="#sz-rz" aria-hidden="true">#</a> sz,rz</h3><p>本机通过 XShell 终端连接服务器时，可通过 sz，rz 进行文件的上传下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 上传文件到服务器
rz  # 会弹出文件选择器弹框

# 将服务器上的文件下载到本机
sz xxx.file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scp" tabindex="-1"><a class="header-anchor" href="#scp" aria-hidden="true">#</a> scp</h3><p>若是在服务器之间需要进行文件交互，比如通过跳板机操作目标服务器时，可通过该命令</p><ul><li>从本地复制到远程</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 将本地多个文件复制到远程 target 目录下，多个文件间以空格隔开
scp -P 5432 -p xxx.jar xxx1.jar root@ip:target

# 将本地文件 1.mp3 拷贝到远程服务器上的 001.mp3 文件里
scp /home/space/music/1.mp3 root@www.runoob.com:/home/root/others/music/001.mp3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>-p</strong>：表示保留原文件修改时间、访问权限</p><p><strong>-P</strong>：大写的P，表示指定端口号，scp 是基于 ssh，输入完同样需要输入密码</p><ul><li>从远程拷贝到本地</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 将远程目录拷贝到当前目录下
scp -r root@192.16.1.108:/var/www/blog .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>-r</strong>：表示递归复制整个目录内的文件目录</p><h2 id="nohup" tabindex="-1"><a class="header-anchor" href="#nohup" aria-hidden="true">#</a> nohup</h2>`,16),b=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code># 后台运行 spring-boot 后端项目
nohup java -jar xxx.jar &amp;

# 查看当前后端项目进程
ps aux | grep java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="expect" tabindex="-1"><a class="header-anchor" href="#expect" aria-hidden="true">#</a> expect</h2>`,2),m={href:"http://blog.dasu.fun/2019/11/23/shell%E8%84%9A%E6%9C%AC/shell%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/",target:"_blank",rel:"noopener noreferrer"};function g(x,f){const i=d("ExternalLinkIcon"),r=d("RouterLink");return h(),o("div",null,[u,e("p",null,[a("服务器的连接、登录、文件上传下载等命令，更详细内容查看："),e("a",v,[a("shell常用命令"),s(i)])]),p,e("p",null,[s(r,{to:"/%E9%80%9F%E6%9F%A5%E7%AC%94%E8%AE%B0/java%E9%80%9F%E6%9F%A5/#nohup"},{default:c(()=>[a("java 命令速查/nohup")]),_:1})]),b,e("p",null,[e("a",m,[a("shell 常用命令/expect"),s(i)])])])}const _=l(t,[["render",g],["__file","index.html.vue"]]);export{_ as default};
